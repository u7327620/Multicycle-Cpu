<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes>
    <entry>
      <string>Width</string>
      <int>6</int>
    </entry>
  </attributes>
  <visualElements>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>INST</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="0" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="360"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="640" y="180"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="680"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="840"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>3</int>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>11-11,10-8,6-4,2-0,12-13, 14-15</string>
        </entry>
      </elementAttributes>
      <pos x="40" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Z</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rd</string>
        </entry>
      </elementAttributes>
      <pos x="100" y="160"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Ra</string>
        </entry>
      </elementAttributes>
      <pos x="100" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>20</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>Rb</string>
        </entry>
      </elementAttributes>
      <pos x="100" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>All Tests</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  ALUOP  RS1   RS2  WS  STR  LDR DMUX FLEN

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  (i)     (ra)  (rb) (rd)  0   X    0  1 #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  X       (ra)  x    (rd)  0   1    1  0 #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  X       (ra)  (rd)  X    1   X    X  0 #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  X       X      X   (rd)  0   X    2  0 #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="140"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>SETH</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>ALUOP</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    ALUOP 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (i)    #test add/sub/and/xor
end loop

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="780"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS1</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS1  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (ra)  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (ra)  #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>RS2</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    RS2  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rb) #test add/sub/and/xor
end loop
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd) #test str

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    STR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          0  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WE</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WE  

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 1  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        0  #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          1  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    LDR 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) X    #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1    #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X    #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          X    #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>DMUX</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    DMUX

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) 0  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        1  #test ldr
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          2  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>WS</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                    WS 

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	((aluop+i)&lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 | rb&lt;&lt;0) (rd)  #test add/sub/and/xor
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        (rd)   #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 )        X     #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm )          (rd)  #test movl

end loop
end loop
end loop
</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="220"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Selector Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
        <entry>
          <string>flipSelPos</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="180" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>0</long>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="180" y="480"/>
    </visualElement>
    <visualElement>
      <elementName>Text</elementName>
      <elementAttributes>
        <entry>
          <string>textFontSize</string>
          <int>14</int>
        </entry>
        <entry>
          <string>Description</string>
          <string>00 = 2 I format
01 = 1 R format Mem
10 = 0 R format ALU</string>
        </entry>
      </elementAttributes>
      <pos x="0" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="180" y="460"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>2</long>
        </entry>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="180" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>Multiplexer</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>3</int>
        </entry>
      </elementAttributes>
      <pos x="560" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="380" y="700"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>2</int>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>2</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1</string>
        </entry>
      </elementAttributes>
      <pos x="340" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Description</string>
          <string>If High, the command was not executed</string>
        </entry>
        <entry>
          <string>Label</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="100"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>splitterSpreading</string>
          <int>2</int>
        </entry>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>2</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1</string>
        </entry>
      </elementAttributes>
      <pos x="280" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLEN</string>
        </entry>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>	INST                                 FLEN

let aluop  = 0b1000;
let ldrop  = 0b0101;
let strop  = 0b0100;
let movlop = 0b0000;

loop(rd, 1&lt;&lt;3)
loop(ra, 1&lt;&lt;3)
loop(rb, 1&lt;&lt;3)

loop(i, 4)
	(aluop &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4) 1 #ALU
end loop

	(ldrop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 ) 0 #test ldr
	(strop    &lt;&lt;12 | rd&lt;&lt;8 | ra&lt;&lt;4 ) 0 #test str
	
	let imm = random(256);
	(movlop   &lt;&lt;12 | rd&lt;&lt;8 | imm ) 0 #test movl

end loop
end loop
end loop</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="740" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>FLGS</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
      </elementAttributes>
      <pos x="0" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>inverterConfig</string>
          <inverterConfig>
            <string>In_1</string>
          </inverterConfig>
        </entry>
      </elementAttributes>
      <pos x="500" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>16</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1</string>
        </entry>
      </elementAttributes>
      <pos x="60" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>STR</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="760"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>LDR</string>
        </entry>
      </elementAttributes>
      <pos x="640" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>SETH</string>
        </entry>
      </elementAttributes>
      <pos x="620" y="600"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="500" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="480" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>Input Splitting</string>
          <string>2</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1</string>
        </entry>
      </elementAttributes>
      <pos x="380" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Not</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="1"/>
        </entry>
      </elementAttributes>
      <pos x="580" y="420"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="360" y="800"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>inverterConfig</string>
          <inverterConfig>
            <string>In_2</string>
          </inverterConfig>
        </entry>
      </elementAttributes>
      <pos x="520" y="820"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
        <entry>
          <string>inverterConfig</string>
          <inverterConfig>
            <string>In_2</string>
          </inverterConfig>
        </entry>
      </elementAttributes>
      <pos x="520" y="740"/>
    </visualElement>
    <visualElement>
      <elementName>Tunnel</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="2"/>
        </entry>
        <entry>
          <string>NetName</string>
          <string>EXEC</string>
        </entry>
      </elementAttributes>
      <pos x="480" y="780"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="520" y="660"/>
    </visualElement>
    <visualElement>
      <elementName>NOr</elementName>
      <elementAttributes>
        <entry>
          <string>rotation</string>
          <rotation rotation="3"/>
        </entry>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="340" y="620"/>
    </visualElement>
    <visualElement>
      <elementName>And</elementName>
      <elementAttributes>
        <entry>
          <string>wideShape</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="520" y="560"/>
    </visualElement>
    <visualElement>
      <elementName>NotConnected</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>2</int>
        </entry>
      </elementAttributes>
      <pos x="180" y="500"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="540" y="260"/>
      <p2 x="560" y="260"/>
    </wire>
    <wire>
      <p1 x="600" y="580"/>
      <p2 x="620" y="580"/>
    </wire>
    <wire>
      <p1 x="620" y="580"/>
      <p2 x="640" y="580"/>
    </wire>
    <wire>
      <p1 x="600" y="840"/>
      <p2 x="640" y="840"/>
    </wire>
    <wire>
      <p1 x="240" y="840"/>
      <p2 x="360" y="840"/>
    </wire>
    <wire>
      <p1 x="480" y="780"/>
      <p2 x="500" y="780"/>
    </wire>
    <wire>
      <p1 x="0" y="80"/>
      <p2 x="60" y="80"/>
    </wire>
    <wire>
      <p1 x="80" y="80"/>
      <p2 x="480" y="80"/>
    </wire>
    <wire>
      <p1 x="460" y="720"/>
      <p2 x="480" y="720"/>
    </wire>
    <wire>
      <p1 x="500" y="660"/>
      <p2 x="520" y="660"/>
    </wire>
    <wire>
      <p1 x="240" y="600"/>
      <p2 x="520" y="600"/>
    </wire>
    <wire>
      <p1 x="600" y="280"/>
      <p2 x="640" y="280"/>
    </wire>
    <wire>
      <p1 x="360" y="540"/>
      <p2 x="380" y="540"/>
    </wire>
    <wire>
      <p1 x="580" y="540"/>
      <p2 x="640" y="540"/>
    </wire>
    <wire>
      <p1 x="380" y="540"/>
      <p2 x="580" y="540"/>
    </wire>
    <wire>
      <p1 x="480" y="860"/>
      <p2 x="500" y="860"/>
    </wire>
    <wire>
      <p1 x="220" y="480"/>
      <p2 x="280" y="480"/>
    </wire>
    <wire>
      <p1 x="280" y="480"/>
      <p2 x="380" y="480"/>
    </wire>
    <wire>
      <p1 x="380" y="480"/>
      <p2 x="640" y="480"/>
    </wire>
    <wire>
      <p1 x="280" y="800"/>
      <p2 x="360" y="800"/>
    </wire>
    <wire>
      <p1 x="60" y="420"/>
      <p2 x="200" y="420"/>
    </wire>
    <wire>
      <p1 x="580" y="100"/>
      <p2 x="620" y="100"/>
    </wire>
    <wire>
      <p1 x="620" y="100"/>
      <p2 x="640" y="100"/>
    </wire>
    <wire>
      <p1 x="480" y="740"/>
      <p2 x="520" y="740"/>
    </wire>
    <wire>
      <p1 x="320" y="740"/>
      <p2 x="380" y="740"/>
    </wire>
    <wire>
      <p1 x="620" y="680"/>
      <p2 x="640" y="680"/>
    </wire>
    <wire>
      <p1 x="60" y="360"/>
      <p2 x="340" y="360"/>
    </wire>
    <wire>
      <p1 x="340" y="360"/>
      <p2 x="640" y="360"/>
    </wire>
    <wire>
      <p1 x="60" y="300"/>
      <p2 x="560" y="300"/>
    </wire>
    <wire>
      <p1 x="60" y="240"/>
      <p2 x="640" y="240"/>
    </wire>
    <wire>
      <p1 x="340" y="560"/>
      <p2 x="520" y="560"/>
    </wire>
    <wire>
      <p1 x="460" y="820"/>
      <p2 x="520" y="820"/>
    </wire>
    <wire>
      <p1 x="60" y="180"/>
      <p2 x="540" y="180"/>
    </wire>
    <wire>
      <p1 x="540" y="180"/>
      <p2 x="640" y="180"/>
    </wire>
    <wire>
      <p1 x="600" y="760"/>
      <p2 x="640" y="760"/>
    </wire>
    <wire>
      <p1 x="0" y="120"/>
      <p2 x="40" y="120"/>
    </wire>
    <wire>
      <p1 x="60" y="120"/>
      <p2 x="500" y="120"/>
    </wire>
    <wire>
      <p1 x="480" y="700"/>
      <p2 x="520" y="700"/>
    </wire>
    <wire>
      <p1 x="360" y="700"/>
      <p2 x="380" y="700"/>
    </wire>
    <wire>
      <p1 x="480" y="700"/>
      <p2 x="480" y="720"/>
    </wire>
    <wire>
      <p1 x="480" y="720"/>
      <p2 x="480" y="740"/>
    </wire>
    <wire>
      <p1 x="240" y="520"/>
      <p2 x="240" y="600"/>
    </wire>
    <wire>
      <p1 x="240" y="600"/>
      <p2 x="240" y="840"/>
    </wire>
    <wire>
      <p1 x="320" y="720"/>
      <p2 x="320" y="740"/>
    </wire>
    <wire>
      <p1 x="580" y="420"/>
      <p2 x="580" y="540"/>
    </wire>
    <wire>
      <p1 x="580" y="300"/>
      <p2 x="580" y="380"/>
    </wire>
    <wire>
      <p1 x="340" y="520"/>
      <p2 x="340" y="560"/>
    </wire>
    <wire>
      <p1 x="340" y="360"/>
      <p2 x="340" y="500"/>
    </wire>
    <wire>
      <p1 x="340" y="560"/>
      <p2 x="340" y="620"/>
    </wire>
    <wire>
      <p1 x="280" y="520"/>
      <p2 x="280" y="800"/>
    </wire>
    <wire>
      <p1 x="280" y="480"/>
      <p2 x="280" y="500"/>
    </wire>
    <wire>
      <p1 x="360" y="540"/>
      <p2 x="360" y="700"/>
    </wire>
    <wire>
      <p1 x="200" y="420"/>
      <p2 x="200" y="440"/>
    </wire>
    <wire>
      <p1 x="540" y="180"/>
      <p2 x="540" y="260"/>
    </wire>
    <wire>
      <p1 x="300" y="520"/>
      <p2 x="300" y="620"/>
    </wire>
    <wire>
      <p1 x="380" y="520"/>
      <p2 x="380" y="540"/>
    </wire>
    <wire>
      <p1 x="380" y="480"/>
      <p2 x="380" y="500"/>
    </wire>
    <wire>
      <p1 x="620" y="100"/>
      <p2 x="620" y="120"/>
    </wire>
    <wire>
      <p1 x="620" y="580"/>
      <p2 x="620" y="600"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>